colour ="black"))
ggplot(data = DATA_AVE,
mapping = aes(x = lgHz, y = ave_lg_central)) +
scale_x_continuous(name = "Frequency (Hz)") +
scale_y_continuous(name = "Mean Central Power (uV^2)")+
geom_line(aes(col=time, lty=time), lwd=1) +
scale_color_manual(values=c("black", "grey40"))+
labs(lty = "Condition", col="Condition")+
theme_classic()+
theme(axis.text=element_text(size=16, colour="black"),
strip.text=element_text(size=16, colour="black"),
axis.title=element_text(size=16,face="bold"),
legend.text=element_text(size=16, color="black"),
legend.title=element_text(size=16, face="bold"),
legend.position = c(0.8,0.8),
legend.background = element_rect(fill="grey90",
size=0.5, linetype="solid",
colour ="black"))
ggplot(data = DATA_AVE,
mapping = aes(x = lgHz, y = ave_lg_central)) +
scale_x_continuous(name = "Frequency (Hz)") +
scale_y_continuous(name = "Mean Central Power (uV^2)", limits=c(-2,2))+
geom_line(aes(col=time, lty=time), lwd=1) +
scale_color_manual(values=c("black", "grey40"))+
labs(lty = "Condition", col="Condition")+
theme_classic()+
theme(axis.text=element_text(size=16, colour="black"),
strip.text=element_text(size=16, colour="black"),
axis.title=element_text(size=16,face="bold"),
legend.text=element_text(size=16, color="black"),
legend.title=element_text(size=16, face="bold"),
legend.position = c(0.8,0.8),
legend.background = element_rect(fill="grey90",
size=0.5, linetype="solid",
colour ="black"))
log(13)
library(car); library(ez); library(tidyverse)
setwd("C:/Users/kelop/Box/Trainees/Anupriya Pathania/Comps/Comps_final")
DATA2 <- read.csv("./data_fac_anova3.csv",
header = TRUE,na.strings=c("","NA","na"),
stringsAsFactors = TRUE)
DATA2$subID <- factor(DATA2$subID)
DATA2$time <- fct_recode(DATA2$time, Rest1 = "A", Task = "B", Rest2 = "C")
DATA2$time <- fct_relevel(DATA2$time, "Rest1", "Task", "Rest2")
DATA2$method <- fct_recode(DATA2$method, FOOOF = "fooof", LMER = "lmer")
DATA2$method <- fct_relevel(DATA2$method, "LMER", "FOOOF")
DATA2$channel <- fct_recode(DATA2$channel, Frontal = "frontal", Central = "central",
Parietal = "parietal", Occipital = "occipital")
DATA2$channel <- fct_relevel(DATA2$channel, "Frontal", "Central", "Parietal", "Occipital")
# Converting all of the FOOOF exponents to be negative to match the LMER slopes:
DATA2$slope <- ifelse(DATA2$method=="FOOOF", -1*DATA2$slope, DATA2$slope)
head(DATA2)
# Implementing the full ANOVA model
overall_model<-ezANOVA(data=DATA2, dv=.(slope), wid=.(subID),
within = .(method, time, channel), detailed = TRUE, type = 3)
overall_model
AIC(overall_model)
LMER <- subset(DATA2, method=="LMER")
LMER_model<-ezANOVA(data=LMER, dv=.(slope), wid=.(subID),
within = .(time, channel), detailed = TRUE, type = 3)
LMER_model
ggplot(data = DATA2[DATA2$method=="LMER",],
mapping = aes(x = channel, y = slope)) +
geom_point(aes(col=time), pch=1, size=1, position=position_dodge(width=0.75))+
#geom_line(aes(group = subID))+
geom_boxplot(aes(fill=time), alpha = .6, notch=FALSE,
col="ivory", lwd=1, outlier.shape=NA)+
scale_x_discrete(name = "Region") +
scale_y_continuous(name = "Spectral Slope", limits=c(-2.5,0.5)) +
dark_theme_gray() +
theme(plot.title=element_text(size=15,
face="bold",
hjust=0.5,
lineheight=1.2),  # title
plot.background = element_rect(fill="grey10"),
panel.background = element_rect(fill="grey20"),
plot.caption=element_text(size=16, face = "bold"),  # caption
axis.title.x=element_text(size=16, face = "bold"),  # X axis title
axis.title.y=element_text(size=16, face = "bold"),  # Y axis title
axis.text.x=element_text(size=16),  # X axis text
axis.text.y=element_text(size=16),
legend.position = "none") # Y axis text
FOOOF <- subset(DATA2, method=="FOOOF")
FOOOF_model<-ezANOVA(data=FOOOF, dv=.(slope), wid=.(subID),
within = .(time, channel), detailed = TRUE, type = 3)
FOOOF_model
ggplot(data = DATA2[DATA2$method=="FOOOF",],
mapping = aes(x = channel, y = slope)) +
geom_point(aes(fill=time), pch=21, size=2, position=position_dodge(width=0.75))+
#geom_line(aes(group = subID))+
geom_boxplot(aes(fill=time), alpha = .6, notch=FALSE,
col="black", lwd=1, outlier.shape=NA)+
scale_x_discrete(name = "Region") +
scale_y_continuous(name = "Aperiodic Slope", limits=c(-2.5,0.5)) +
scale_fill_grey()+
theme_bw()+
theme(axis.text=element_text(size=16, colour="black"),
strip.text=element_text(size=16, colour="black"),
axis.title=element_text(size=16, colour="black", face="bold"),
legend.position = "none")
library(car); library(ez); library(tidyverse); library(ggdark)
FOOOF <- subset(DATA2, method=="FOOOF")
FOOOF_model<-ezANOVA(data=FOOOF, dv=.(slope), wid=.(subID),
within = .(time, channel), detailed = TRUE, type = 3)
FOOOF_model
ggplot(data = DATA2[DATA2$method=="FOOOF",],
mapping = aes(x = channel, y = slope)) +
geom_point(aes(fill=time), pch=21, size=2, position=position_dodge(width=0.75))+
#geom_line(aes(group = subID))+
geom_boxplot(aes(fill=time), alpha = .6, notch=FALSE,
col="black", lwd=1, outlier.shape=NA)+
scale_x_discrete(name = "Region") +
scale_y_continuous(name = "Aperiodic Slope", limits=c(-2.5,0.5)) +
scale_fill_grey()+
theme_bw()+
theme(axis.text=element_text(size=16, colour="black"),
strip.text=element_text(size=16, colour="black"),
axis.title=element_text(size=16, colour="black", face="bold"),
legend.position = "none")
ggplot(data = DATA2[DATA2$method=="LMER",],
mapping = aes(x = channel, y = slope)) +
geom_point(aes(col=time), pch=1, size=1, position=position_dodge(width=0.75))+
#geom_line(aes(group = subID))+
geom_boxplot(aes(fill=time), alpha = .6, notch=FALSE,
col="ivory", lwd=1, outlier.shape=NA)+
scale_x_discrete(name = "Region") +
scale_y_continuous(name = "Spectral Slope", limits=c(-2.5,0.5)) +
dark_theme_gray() +
theme(plot.title=element_text(size=15,
face="bold",
hjust=0.5,
lineheight=1.2),  # title
plot.background = element_rect(fill="grey10"),
panel.background = element_rect(fill="grey20"),
plot.caption=element_text(size=16, face = "bold"),  # caption
axis.title.x=element_text(size=16, face = "bold"),  # X axis title
axis.title.y=element_text(size=16, face = "bold"),  # Y axis title
axis.text.x=element_text(size=16),  # X axis text
axis.text.y=element_text(size=16),
legend.position = "none") # Y axis text
ggplot(data = DATA2[DATA2$method=="FOOOF",],
mapping = aes(x = channel, y = slope)) +
geom_point(aes(fill=time), pch=21, size=2, position=position_dodge(width=0.75))+
#geom_line(aes(group = subID))+
geom_boxplot(aes(fill=time), alpha = .6, notch=FALSE,
col="black", lwd=1, outlier.shape=NA)+
scale_x_discrete(name = "Region") +
scale_y_continuous(name = "Aperiodic Slope", limits=c(-2.5,0.5)) +
scale_fill_grey()+
dark_theme_gray() +
theme(plot.title=element_text(size=15,
face="bold",
hjust=0.5,
lineheight=1.2),  # title
plot.background = element_rect(fill="grey10"),
panel.background = element_rect(fill="grey20"),
plot.caption=element_text(size=16, face = "bold"),  # caption
axis.title.x=element_text(size=16, face = "bold"),  # X axis title
axis.title.y=element_text(size=16, face = "bold"),  # Y axis title
axis.text.x=element_text(size=16),  # X axis text
axis.text.y=element_text(size=16),
legend.position = "none") # Y axis text
ggplot(data = DATA2[DATA2$method=="FOOOF",],
mapping = aes(x = channel, y = slope)) +
geom_point(aes(fill=time), pch=21, size=2, position=position_dodge(width=0.75))+
#geom_line(aes(group = subID))+
geom_boxplot(aes(fill=time), alpha = .6, notch=FALSE,
col="black", lwd=1, outlier.shape=NA)+
scale_x_discrete(name = "Region") +
scale_y_continuous(name = "Aperiodic Slope", limits=c(-2.5,0.5)) +
dark_theme_gray() +
theme(plot.title=element_text(size=15,
face="bold",
hjust=0.5,
lineheight=1.2),  # title
plot.background = element_rect(fill="grey10"),
panel.background = element_rect(fill="grey20"),
plot.caption=element_text(size=16, face = "bold"),  # caption
axis.title.x=element_text(size=16, face = "bold"),  # X axis title
axis.title.y=element_text(size=16, face = "bold"),  # Y axis title
axis.text.x=element_text(size=16),  # X axis text
axis.text.y=element_text(size=16),
legend.position = "none") # Y axis text
##### Frontal ANOVA Model -------------------------------------------------
FRONTAL <- subset(DATA2, channel =="Frontal")
frontal_model<-ezANOVA(data=FRONTAL, dv=.(slope), wid=.(subID),
within = .(method, time), detailed = TRUE, type = 3)
frontal_model
ggplot(data = FRONTAL,
mapping = aes(x = time, y = slope)) +
geom_point(aes(fill=method), pch=21, size=2)+
geom_line(aes(group = subID, col=method))+
geom_boxplot(aes(fill=method, group=time), alpha = .6, notch=FALSE,
col="black", lwd=1, outlier.shape=NA)+
facet_wrap(~method)+
scale_x_discrete(name = "Experimental Session") +
scale_y_continuous(name = "PSD Slope") +
theme_bw()+
theme(axis.text=element_text(size=16, colour="black"),
strip.text=element_text(size=16, colour="black"),
axis.title=element_text(size=16, colour="black", face="bold"),
legend.position = "none")
#### Central ANOVA Model --------------------------------------------------
CENTRAL <- subset(DATA2, channel =="Central")
central_model<-ezANOVA(data=CENTRAL, dv=.(slope), wid=.(subID),
within = .(method, time), detailed = TRUE, type = 3)
central_model
#### ANOVA Post hoc testing within lmer method ----------------------------------
CENTRAL_lmer <- subset(CENTRAL, CENTRAL$method == "LMER")
head(CENTRAL_lmer)
t.test(CENTRAL_lmer$slope[CENTRAL_lmer$time=="Task"],
CENTRAL_lmer$slope[CENTRAL_lmer$time=="Rest2"],
paired=TRUE, var.equal = FALSE)
t.test(CENTRAL_lmer$slope[CENTRAL_lmer$time=="Task"],
CENTRAL_lmer$slope[CENTRAL_lmer$time=="Rest1"],
paired=TRUE, var.equal = FALSE)
t.test(CENTRAL_lmer$slope[CENTRAL_lmer$time=="Rest1"],
CENTRAL_lmer$slope[CENTRAL_lmer$time=="Rest2"],
paired=TRUE, var.equal = FALSE)
#### ANOVA Post hoc testing within fooof ---------------------------------------
CENTRAL_fooof <- subset(CENTRAL, CENTRAL$method == "FOOOF")
t.test(CENTRAL_fooof$slope[CENTRAL_fooof$time=="Task"],
CENTRAL_fooof$slope[CENTRAL_fooof$time=="Rest2"],
paired=TRUE, var.equal = FALSE)
t.test(CENTRAL_fooof$slope[CENTRAL_fooof$time=="Task"],
CENTRAL_fooof$slope[CENTRAL_fooof$time=="Rest1"],
paired=TRUE, var.equal = FALSE)
t.test(CENTRAL_fooof$slope[CENTRAL_fooof$time=="Rest1"],
CENTRAL_fooof$slope[CENTRAL_fooof$time=="Rest2"],
paired=TRUE, var.equal = FALSE)
ggplot(data = CENTRAL,
mapping = aes(x = time, y = slope)) +
geom_point(aes(fill=method), pch=21, size=2)+
geom_line(aes(group = subID, col=method))+
geom_boxplot(aes(fill=method, group=time), alpha = .6, notch=FALSE,
col="black", lwd=1, outlier.shape=NA)+
facet_wrap(~method)+
scale_x_discrete(name = "Experimental Session") +
scale_y_continuous(name = "PSD Slope") +
theme_bw()+
theme(axis.text=element_text(size=16, colour="black"),
strip.text=element_text(size=16, colour="black"),
axis.title=element_text(size=16, colour="black", face="bold"),
legend.position = "none")
##### Parietal ANOVA Model -------------------------------------------
PARIETAL <- subset(DATA2, channel =="Parietal")
parietal_model<-ezANOVA(data=PARIETAL, dv=.(slope), wid=.(subID),
within = .(method, time), detailed = TRUE, type = 3)
parietal_model
ggplot(data = PARIETAL,
mapping = aes(x = time, y = slope)) +
geom_point(aes(fill=method), pch=21, size=2)+
geom_line(aes(group = subID, col=method))+
geom_boxplot(aes(fill=method, group=time), alpha = .6, notch=FALSE,
col="black", lwd=1, outlier.shape=NA)+
facet_wrap(~method)+
scale_x_discrete(name = "Experimental Session") +
scale_y_continuous(name = "PSD Slope") +
theme_bw()+
theme(axis.text=element_text(size=16, colour="black"),
strip.text=element_text(size=16, colour="black"),
axis.title=element_text(size=16, colour="black", face="bold"),
legend.position = "none")
### Parietal post hoc testing within lmer -------------------------------
PARIETAL_lmer <- subset(PARIETAL, PARIETAL$method == "LMER")
t.test(PARIETAL_lmer$slope[PARIETAL_lmer$time=="Task"],
PARIETAL_lmer$slope[PARIETAL_lmer$time=="Rest2"],
paired=TRUE, var.equal = FALSE)
t.test(PARIETAL_lmer$slope[PARIETAL_lmer$time=="Task"],
PARIETAL_lmer$slope[PARIETAL_lmer$time=="Rest1"],
paired=TRUE, var.equal = FALSE)
t.test(PARIETAL_lmer$slope[PARIETAL_lmer$time=="Rest1"],
PARIETAL_lmer$slope[PARIETAL_lmer$time=="Rest2"],
paired=TRUE, var.equal = FALSE)
#### Parietal Post hoc testing within fooof -----------------------------
PARIETAL_fooof <- subset(PARIETAL, PARIETAL$method == "FOOOF")
t.test(PARIETAL_fooof$slope[PARIETAL_fooof$time=="Task"],
PARIETAL_fooof$slope[PARIETAL_fooof$time=="Rest2"],
paired=TRUE, var.equal = FALSE)
t.test(PARIETAL_fooof$slope[PARIETAL_fooof$time=="Task"],
PARIETAL_fooof$slope[PARIETAL_fooof$time=="Rest1"],
paired=TRUE, var.equal = FALSE)
t.test(PARIETAL_fooof$slope[PARIETAL_fooof$time=="Rest1"],
PARIETAL_fooof$slope[PARIETAL_fooof$time=="Rest2"],
paired=TRUE, var.equal = FALSE)
#### Occipital ANOVA Model ----------------------------------------------
OCCIPITAL <- subset(DATA2, channel =="Occipital")
occipital_model<-ezANOVA(data=OCCIPITAL, dv=.(slope), wid=.(subID),
within = .(method, time), detailed = TRUE, type = 3)
occipital_model
ggplot(data = OCCIPITAL,
mapping = aes(x = time, y = slope)) +
geom_point(aes(fill=method), pch=21, size=2)+
geom_line(aes(group = subID, col=method))+
geom_boxplot(aes(fill=method, group=time), alpha = .6, notch=FALSE,
col="black", lwd=1, outlier.shape=NA)+
facet_wrap(~method)+
scale_x_discrete(name = "Experimental Session") +
scale_y_continuous(name = "PSD Slope") +
theme_bw()+
theme(axis.text=element_text(size=16, colour="black"),
strip.text=element_text(size=16, colour="black"),
axis.title=element_text(size=16, colour="black", face="bold"),
legend.position = "none")
### Occipital post hoc testing within lmer -------------------------------
OCCIPITAL_lmer <- subset(OCCIPITAL, method == "LMER")
t.test(OCCIPITAL_lmer$slope[OCCIPITAL_lmer$time=="Task"],
OCCIPITAL_lmer$slope[OCCIPITAL_lmer$time=="Rest2"],
paired=TRUE, var.equal = FALSE)
t.test(OCCIPITAL_lmer$slope[OCCIPITAL_lmer$time=="Task"],
OCCIPITAL_lmer$slope[OCCIPITAL_lmer$time=="Rest1"],
paired=TRUE, var.equal = FALSE)
t.test(OCCIPITAL_lmer$slope[OCCIPITAL_lmer$time=="Rest1"],
OCCIPITAL_lmer$slope[OCCIPITAL_lmer$time=="Rest2"],
paired=TRUE, var.equal = FALSE)
#### Parietal Post hoc testing within fooof -----------------------------
OCCIPITAL_fooof <- subset(OCCIPITAL, method == "FOOOF")
t.test(OCCIPITAL_fooof$slope[OCCIPITAL_fooof$time=="Task"],
OCCIPITAL_fooof$slope[OCCIPITAL_fooof$time=="Rest2"],
paired=TRUE, var.equal = FALSE)
t.test(OCCIPITAL_fooof$slope[OCCIPITAL_fooof$time=="Task"],
OCCIPITAL_fooof$slope[OCCIPITAL_fooof$time=="Rest1"],
paired=TRUE, var.equal = FALSE)
t.test(OCCIPITAL_fooof$slope[OCCIPITAL_fooof$time=="Rest1"],
OCCIPITAL_fooof$slope[OCCIPITAL_fooof$time=="Rest2"],
paired=TRUE, var.equal = FALSE)
LMER_model
FOOOF_model
library(lme4); library (ICC); library(psych);
library(car); library(tidyverse); library(lmerTest)
# Multilevel models for LMER slopes versus FOOOF -------------------------------
DATA3 <- read.csv("./data_EEG_COMB1v1.csv",
header = TRUE,na.strings=c("","NA","na"),
stringsAsFactors = TRUE)
head(DATA3)
# Make the FOOOF exponents negative to match the spectral slopes:
DATA3 <- DATA3 %>% mutate(slope_frontal = -slope_frontal,
slope_central = -slope_central,
slope_parietal = -slope_parietal,
slope_occipital = -slope_occipital)
PRAC_wide <-subset(DATA3, time == "prac")
head(PRAC_wide)
SLOPES_WIDE<-PRAC_wide %>% select(-c("intercept_frontal", "intercept_central", "intercept_parietal",
"intercept_occipital", "offset_frontal", "offset_central",
"offset_parietal", "offset_occipital"))
library(lme4); library (ICC); library(psych); library(lmerTest)
library(car); library(tidyverse);
setwd("~/GitHub/spectral_slopes_reliability")
# Multilevel models for LMER slopes versus FOOOF -------------------------------
DATA3 <- read.csv("./data_EEG_COMB1v1.csv",
header = TRUE,na.strings=c("","NA","na"),
stringsAsFactors = TRUE)
head(DATA3)
# Make the FOOOF exponents negative to match the spectral slopes:
DATA3 <- DATA3 %>% mutate(slope_frontal = -slope_frontal,
slope_central = -slope_central,
slope_parietal = -slope_parietal,
slope_occipital = -slope_occipital)
PRAC_wide <-subset(DATA3, time == "prac")
head(PRAC_wide)
SLOPES_WIDE<-PRAC_wide %>% select(-c("intercept_frontal", "intercept_central", "intercept_parietal",
"intercept_occipital", "offset_frontal", "offset_central",
"offset_parietal", "offset_occipital"))
head(SLOPES_WIDE)
SLOPES_LONG <-gather(data = SLOPES_WIDE, key = method, value = slopes, c("lgHz_frontal", "lgHz_central", "lgHz_parietal", "lgHz_occipital",
"slope_frontal", "slope_central", "slope_parietal", "slope_occipital"))
head(SLOPES_LONG)
INT_WIDE<-select(PRAC_wide, c("subID", "block", "intercept_frontal", "intercept_central", "intercept_parietal",
"intercept_occipital", "offset_frontal", "offset_central",
"offset_parietal", "offset_occipital"))
head(INT_WIDE)
INT_LONG <-gather(data = INT_WIDE, key = method, value = ints, c("intercept_frontal", "intercept_central", "intercept_parietal",
"intercept_occipital", "offset_frontal", "offset_central",
"offset_parietal", "offset_occipital"))
head(INT_LONG)
SLOPES_LONG$ints<-INT_LONG$ints
head(SLOPES_LONG)
# Splitting the "method" string into region and method variables:
SLOPES_LONG <- SLOPES_LONG %>% separate(col=method,
into = c("method","region"),
sep = "_")
head(SLOPES_LONG)
summary(SLOPES_LONG$method)
SLOPES_LONG$method <- fct_recode(SLOPES_LONG$method, FOOOF = "slope", LMER = "lgHz")
SLOPES_LONG$method <- fct_relevel(SLOPES_LONG$method, "LMER", "FOOOF")
SLOPES_LONG <- SLOPES_LONG %>% arrange(subID, block)
#### LMER model for PRAC -------------------------------
DATA <- read.csv("./data_PRAC_long1.csv",
header = TRUE,na.strings=c("","NA","na"),
stringsAsFactors = TRUE)
head(DATA)
DATA$method.c<-(as.numeric(DATA$method)-1.5)*(-1) ## convert method to numerical
DATA$blocknum <-as.numeric(as.character(substr(DATA$block, 2, 3)))
summary(DATA$blocknum)
DATA$block.c<-DATA$blocknum-mean(DATA$blocknum)
head(DATA)
DATA$diff.c <- DATA$diff - mean(DATA$diff)
# Overall LMER Model -----------------------------------------------------------
M1 <- lmer(slopes ~ 1+ block.c*diff.c*method*region+
(1|subID)+(1|subID:method)+(1|subID:region),
data = DATA, REML = FALSE)
Anova(M1, type="III")
Fron_mod_LMER <- lmer(slopes ~ 1+ block.c+diff.c+
(1+block.c+diff.c|subID),
data = FRONTAL[FRONTAL$method=="LMER",], REML = FALSE,
control=lmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=5e5)))
FRONTAL <- subset(DATA, region == "frontal")
head(FRONTAL)
Fron_mod <- lmer(slopes ~ 1+ block.c*method+diff.c*method+
(1+block.c+diff.c+method|subID),
data = FRONTAL, REML = FALSE,
control=lmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=5e5)))
Anova(Fron_mod, type="III")
summary(Fron_mod)
Fron_mod_LMER <- lmer(slopes ~ 1+ block.c+diff.c+
(1+block.c+diff.c|subID),
data = FRONTAL[FRONTAL$method=="LMER",], REML = FALSE,
control=lmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=5e5)))
Anova(Fron_mod_LMER, type="III")
summary(Fron_mod_LMER)
Fron_mod_FOOOF <- lmer(slopes ~ 1+ block.c+diff.c+
(1+block.c+diff.c|subID),
data = FRONTAL[FRONTAL$method=="FOOOF",], REML = FALSE,
control=lmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=5e5)))
Anova(Fron_mod_FOOOF, type="III")
summary(Fron_mod_FOOOF)
AIC(Fron_mod_LMER)
AIC(Fron_mod_FOOOF)
# Post hoc tests for LMER method for central channels --------------------------
CENTRAL <- subset(DATA, region == "central")
head(CENTRAL)
Cent_mod <- lmer(slopes ~ 1+ block.c*method+diff.c*method+
(1+block.c+diff.c+method|subID),
data = CENTRAL, REML = FALSE,
control=lmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=5e5)))
Anova(Cent_mod, type="III")
summary(Cent_mod)
Cent_mod_LMER <- lmer(slopes ~ 1+ block.c+diff.c+
(1+block.c+diff.c|subID),
data = CENTRAL[CENTRAL$method=="LMER",], REML = FALSE,
control=lmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=5e5)))
Anova(Cent_mod_LMER, type="III")
summary(Cent_mod_LMER)
Cent_mod_FOOOF <- lmer(slopes ~ 1+ block.c+diff.c+
(1+block.c+diff.c|subID),
data = CENTRAL[CENTRAL$method=="FOOOF",], REML = FALSE,
control=lmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=5e5)))
Anova(Cent_mod_FOOOF, type="III")
summary(Cent_mod_FOOOF)
AIC(Cent_mod_LMER)
AIC(Cent_mod_FOOOF)
# Post hoc tests for LMER method for parietal channels --------------------------
PARIETAL <- subset(DATA, region == "parietal")
head(PARIETAL)
Par_mod <- lmer(slopes ~ 1+ block.c*method+diff.c*method+
(1+block.c+diff.c+method|subID),
data = PARIETAL, REML = FALSE,
control=lmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=5e5)))
Anova(Par_mod, type="III")
summary(Par_mod)
Par_mod_LMER <- lmer(slopes ~ 1+ block.c+diff.c+
(1+block.c+diff.c|subID),
data = PARIETAL[PARIETAL$method=="LMER",], REML = FALSE,
control=lmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=5e5)))
Anova(Par_mod_LMER, type="III")
summary(Par_mod_LMER)
Par_mod_FOOOF <- lmer(slopes ~ 1+ block.c+diff.c+
(1+block.c+diff.c|subID),
data = PARIETAL[PARIETAL$method=="FOOOF",], REML = FALSE,
control=lmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=5e5)))
Anova(Par_mod_FOOOF, type="III")
summary(Par_mod_FOOOF)
AIC(Cent_mod_LMER)
AIC(Par_mod_LMER)
AIC(Par_mod_FOOOF)
# Post hoc tests for LMER method for occipital channels --------------------------
OCCIPITAL <- subset(DATA, region == "occipital")
head(OCCIPITAL)
Occ_mod <- lmer(slopes ~ 1+ block.c*method+diff.c*method+
(1+block.c+diff.c+method|subID),
data = OCCIPITAL, REML = FALSE,
control=lmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=5e5)))
Anova(Occ_mod, type="III")
summary(Occ_mod)
Occ_mod_LMER <- lmer(slopes ~ 1+ block.c+diff.c+
(1+block.c+diff.c|subID),
data = OCCIPITAL[OCCIPITAL$method=="LMER",], REML = FALSE,
control=lmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=5e5)))
Anova(Occ_mod_LMER, type="III")
summary(Occ_mod_LMER)
Occ_mod_FOOOF <- lmer(slopes ~ 1+ block.c+diff.c+
(1+block.c+diff.c|subID),
data = OCCIPITAL[OCCIPITAL$method=="FOOOF",], REML = FALSE,
control=lmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=5e5)))
Anova(Occ_mod_FOOOF, type="III")
summary(Occ_mod_FOOOF)
AIC(Par_mod_LMER)
AIC(Occ_mod_LMER)
AIC(Occ_mod_FOOOF)
